import streamlit as st 
import pandas as pd 
import time
from google import genai
from google.genai import types
from google.genai.types import HttpOptions, ModelContent, Part, UserContent

films = pd.read_csv('TMDb_IMDb_full.csv')
actors_df = pd.read_csv("Intervenants.csv")
bridge_df = pd.read_csv('Table__Intermediare.csv.csv') 

client = genai.Client(api_key=)

system_prompt = """Vous √™tes un sp√©cialiste de tout ce qui touche au cin√©ma et aux films. Vous donnez des r√©ponses pr√©cises et coh√©rentes avec l'argumentation.
Vous donnez des suggestions bas√©es sur ce que l'utilisateur aime, mais sur la base des ensembles de donn√©es fournis, tels que les dataframe 'films' et 'actors_df', t√©l√©charg√©es sur cette page, et le dataframe 'bridge_df', qui sert de pont entre les deux, sans mentionner o√π vous avez obtenu l'information. Si la question n'est pas en rapport avec le sujet, dites √† l'utilisateur que vous n'√™tes sp√©cialis√© que dans cette branche."""

chat = client.chats.create(
    model = "gemini-2.5-flash-preview-05-20",
    history = [
        UserContent(parts=[Part(text="Hello")]),
        ModelContent(parts=[Part(text="Great to meet you. What would you like to know?")])
    ]
)

chat.send_message(system_prompt)

def chatbot():
    
    st.title("üß†Le sp√©cialiste de le Cinema e des Filmsüß†")
    
    st.markdown(
        """
        Bienvenue ! Je suis un sp√©cialiste de l'art Cinematographique.
        Posez-moi vos questions sur le **Cinema**, votre  **Films prefer√©** et les **intervenants**.
        """
    )
    st.markdown("---")
    
    user_question = st.text_area("Votre question : ", height= 100, placeholder="Quel film conseilleriez-vous √† un amateur de com√©die ?")
    
    if st.button("Poser la question", help="Cliquez pour obtenir une r√©ponse"):
        if user_question:
            with st.spinner("Analyse de votre question et pr√©paration de la r√©ponse..."):
                time.sleep(5)
                response = chat.send_message_stream(user_question)
            for chunk in response:
                st.write(chunk.text, end="")
